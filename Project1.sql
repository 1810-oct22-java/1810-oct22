CREATE TABLE ERS_REIMBURSMENT(
    REIMB_ID NUMBER NOT NULL Primary Key,
    REIMB_AMOUNT NUMBER NOT NULL,
    REIMB_SUBMITTED TIMESTAMP NOT NULL,
    REIMB_RESOLVED TIMESTAMP,
    REIMB_DESCRIPTION VARCHAR2(250),
    REIMB_RECEIPT BLOB,
    REIMB_AUTHOR NUMBER,
    REIMB_RESOLVER NUMBER,
    REIMB_STATUS_ID NUMBER,
    REIM_TYPE_ID NUMBER,
    FOREIGN KEY (REIMB_AUTHOR) REFERENCES ERS_USERS (ERS_USERS_ID),
    FOREIGN KEY (REIMB_RESOLVER) REFERENCES ERS_USERS (ERS_USERS_ID),
    FOREIGN KEY (REIMB_STATUS_ID) REFERENCES ERS_REIMBURSMENT_STATUS (REIMB_STATUS_ID),
    FOREIGN KEY (REIM_TYPE_ID) REFERENCES ERS_REIMBURSMENT_TYPE(REIMB_TYPE_ID)
    
);

CREATE TABLE ERS_USERS(
    ERS_USERS_ID NUMBER Primary Key,
    ERS_USERNAME VARCHAR2(50) UNIQUE NOT NULL,
    ERS_PASSWORD VARCHAR2(50) NOT NULL,
    USER_FIRST_NAME VARCHAR2(100) NOT NULL,
    USER_LAST_NAME VARCHAR2(100) NOT NULL,
    USER_EMAIL VARCHAR2(150) UNIQUE NOT NULL,
    USER_ROLE_ID NUMBER NOT NULL,
    FOREIGN KEY (USER_ROLE_ID) REFERENCES ERS_USER_ROLES(ERS_USER_ROLE_ID)
);



CREATE TABLE ERS_REIMBURSMENT_STATUS(
    REIMB_STATUS_ID NUMBER Primary Key,
    REIMB_STATUS VARCHAR2(10)NOT NULL
);

CREATE TABLE ERS_REIMBURSMENT_TYPE(
    REIMB_TYPE_ID NUMBER Primary Key,
    REIMB_TYPE VARCHAR2(10) NOT NULL
);

CREATE TABLE ERS_USER_ROLES( 
    ERS_USER_ROLE_ID NUMBER Primary Key,
    USER_ROLE VARCHAR2(10) NOT NULL
);

CREATE SEQUENCE REIMB_ID_SEQ
START WITH 1
INCREMENT BY 1;

CREATE SEQUENCE ERS_USERS_ID_SEQ
START WITH 1
INCREMENT BY 1;

CREATE SEQUENCE REIMB_ID_SEQ
START WITH 1
INCREMENT BY 1;

CREATE SEQUENCE REIMB_STATUS_ID_SEQ
START WITH 1
INCREMENT BY 1;

CREATE SEQUENCE REIMB_TYPE_ID_SEQ
START WITH 1
INCREMENT BY 1;

CREATE SEQUENCE ERS_USER_ROLE_ID_SEQ
START WITH 1
INCREMENT BY 1;

CREATE OR REPLACE TRIGGER ERS_REIMBURSMENT_TRIG
BEFORE INSERT ON ERS_REIMBURSMENT
FOR EACH ROW
BEGIN
SELECT REIMB_ID_SEQ.NEXTVAL INTO :NEW.REIMB_ID FROM DUAL;
END;
/

CREATE OR REPLACE TRIGGER ERS_REIMBURSMENT_TRIG
BEFORE INSERT ON ERS_REIMBURSMENT
FOR EACH ROW
BEGIN
SELECT REIMB_ID_SEQ.NEXTVAL INTO :NEW.REIMB_ID FROM DUAL;
END;
/

CREATE OR REPLACE TRIGGER ERS_USERS_TRIG
BEFORE INSERT ON ERS_USERS
FOR EACH ROW
BEGIN
SELECT ERS_USERS_ID_SEQ.NEXTVAL INTO :NEW.USERS_ID FROM DUAL;
END;
/




CREATE OR REPLACE PROCEDURE GET_ALL_USERS(USER_CURSOR OUT SYS_REFCURSOR)
AS
BEGIN
OPEN USER_CURSOR FOR SELECT * FROM ERS_USERS;
  end;
  /

