package com.revature.servlets;

import java.io.IOException;
import java.io.PrintWriter;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.log4j.Logger;

import com.revature.pojos.User;
import com.revature.service.UserService;

@WebServlet("/login")
public class LoginServlet extends HttpServlet {

	static UserService uService = new UserService();

	private static Logger logger = Logger.getLogger(LoginServlet.class);

	@Override
	protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
		// functionality to go back to login.html
		// REQUEST DISPATCHER

		// consult user servers to obtain user with this info

		req.getRequestDispatcher("login.html").forward(req, resp);
	}

	@Override
	protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
		// login functionality here:
		String username = req.getParameter("username");
		String password = req.getParameter("password");

		logger.debug(username);

		// consult user servers to obtain user with this info
		User user = uService.validateUser(username, password);

		// PrintWriter writer = resp.getWriter();
		// resp.setContentType("text/html");
		// String text = "";

		if (user == null) {
			req.getRequestDispatcher("partials/error-login.html").forward(req, resp);
		} else {
			// successful login
			// Add user to session
			HttpSession session = req.getSession();

			// will return current session if one exists
			// creates new session and returns it if none exists
			logger.trace("ADDING USER TO SESSION: " + session.getId());

			session.setAttribute("user", user);
			session.setAttribute("role", user.getRoleID());
			logger.trace(session.getAttribute("role"));
			if (user.getRoleID() == 1) {
				resp.sendRedirect("employee.view");
			} else {
				resp.sendRedirect("manager.view");
			}

		}

	}

}
